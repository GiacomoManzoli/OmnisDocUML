/**
 * @param {String} actionName 
 * @desc helper method for generate oninput event actions
 * dispatches an action of type actionName where [event.target.name]: event.target.value
 * @example
 * export default connect(
 *   (reducerStates) => reducerStates.login,
 *   {
 *       onInputEmail: onInput(LOGIN_EMAIL_INPUT),
 *   }
 * )({...
 * 
 * 
 * view(vnode) {
 *  
 *   const {
 *      username,
 *   } = vnode.attrs
 *   const {
 *      onInputUsername,
 *   } = vnode.attrs.actions
 * 
 *   return (
 *      <TextField type="text"
 *          label="Username"
 *          name="username"
 *          oninput={onInputUsername}
 *          className="mdl-textfield--floating-label" />
 *   )
 * }
 */
export function onInput(actionName) {

    return function (event) {
        return (dispatch, getState) => {
            dispatch({
                type: actionName,
                [event.target.name]: event.target.value,
            })
        }
    }
}